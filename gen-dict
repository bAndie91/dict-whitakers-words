#!/usr/bin/env perl

use Data::Dumper;

$done = 0;
my $total = 0;
$inputfile = $ARGV[0];
$words_exe = $ARGV[1];

close STDIN;
open my $input_fh, '<', $inputfile or die;
$total++ while <$input_fh>;
seek $input_fh, 0, 0;
my $t0 = time;

while(my $headword = <$input_fh>)
{
	$headword =~ s/\s*$//;
	unless($headword =~ /^-?$/)
	{
		open my $fh, '-|', $words_exe, $headword;
		
		my $translation_num;
		while(my $defline = <$fh>)
		{
			chomp $defline;
			next if $defline =~ /^\s*$/;
			
			if($defline =~ /\[[A-Z]+\]/)
			{
				print "$headword\n";
				my $dictform = $defline;
				print "\t$dictform\n";
				$translation_num = 1;
			}
			else
			{
				for my $translation (split /\s*;\s*/, $defline)
				{
					print "\t\n" if $translation_num == 1;
					print "\t$translation_num. $translation\n";
					$translation_num++;
				}
			}
		}
		close $fh;
	}
	
	$done++;
	my $t = time;
	my $minutes = ($t - $t0)/60;
	my $eta = ($minutes*$total/$done) - $minutes;
	printf STDERR "\x1B[K%s: %d/%d - %d%%, %dh %dm passed, ETA %dh %dm\r", $0, $done, $total, $done*100/$total, $minutes/60, $minutes % 60, $eta/60, $eta % 60;
}

print STDERR "\n";
