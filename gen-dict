#!/usr/bin/env perl

use Data::Dumper;

$done = 0;
my $total = 0;
$inputfile = shift @ARGV;
@words_cmd = @ARGV;

close STDIN;
open my $input_fh, '<', $inputfile or die;
$total++ while <$input_fh>;
seek $input_fh, 0, 0;
my $t0 = time;

while(my $headword = <$input_fh>)
{
	$headword =~ s/\s*$//;
	unless($headword =~ /^-?$/)
	{
		open my $fh, '-|', @words_cmd, $headword;
		
		my $translation_num;
		
		while(my $defline = <$fh>)
		{
			chomp $defline;
			next if $defline =~ /^\s*$/;
			next if $defline =~ /========   UNKNOWN/;
			goto HEADWORD_DONE if $defline =~ /May be 2 words combined.*If not obvious, probably incorrect/;
			next if $defline =~ /^not \(introducing negative clause/;
			next if $defline =~ /^PACKON/;
			next if $defline =~ /^TACKON/;
			
			if($defline =~ /^(.+)(\[[A-Z]{5}\])(.+)$/)
			{
				my ($pre_flags, $flags, $post_flags) = ($1, $2, $3);
				$flags =~ /\[(?'age'.)(.)(.)(?'frequency'.)(.)/;
				my ($age_flag, $frequency_flag) = ($+{'age'}, $+{'freq'});
				
				my $age;
				my $frequency;
				
				if($age_flag ne 'X') { $post_flags =~ s/^(  \S*  )(\S+)/$1/; $age = $2; }
				if($frequency_flag ne 'X') { $post_flags =~ s/^(  \S*  \S*  )(\S+)/$1/; $frequency = $2; }
				
				print "$headword\n";
				my $dictform = "$pre_flags$flags$post_flags";
				print "\t$dictform\n";
				if($age or $frequency) { print "\t\n"; }
				if($age) { print "\tage: $age\n"; }
				if($frequency) { print "\tfrequency: $frequency\n"; }
				
				$translation_num = 1;
			}
			else
			{
				if(not defined $translation_num)
				{
					warn "$0: unexpected line for '$headword': $defline\n";
					next;
				}
				for my $translation (split /\s*;\s*/, $defline)
				{
					print "\t\n" if $translation_num == 1;
					print "\t$translation_num. $translation\n";
					$translation_num++;
				}
			}
		}
		HEADWORD_DONE:
		close $fh;
	}
	
	$done++;
	my $t = time;
	my $minutes = ($t - $t0)/60;
	my $eta = ($minutes*$total/$done) - $minutes;
	printf STDERR "\x1B[K%s: %d/%d - %d%%, %dh %dm passed, ETA %dh %dm\r", $0, $done, $total, $done*100/$total, $minutes/60, $minutes % 60, $eta/60, $eta % 60;
}

print STDERR "\n";
